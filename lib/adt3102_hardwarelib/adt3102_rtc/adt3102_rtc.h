#ifndef __RTC__H
#define __RTC__H
#include "adt3102_type_define.h"
/***Macro Definition*********************************************************************
RCSOR : 32k RC
XOSOR : 32k XO
DIVHIGHSOR: div from clk_high, this is for normal function
****************************************************************************************/
#define RCSOR      0
#define XOSOR      1
#define DIVHIGHSOR 2
/****************************************************************************************
*
*Function name : rtcInit
*Description   : RTC init
*Paramater	   :
*        @enable :if set to 1,the RTC is enabled,don't write to this bit otherwise the current
                  RTC value is reset to zero
*        @reloadValue: The reloadValue is compared with the counter value generate an interrupt
*        @rtcClock: Actually the clock frequency generated by 32K clock source, the uint is KHz
*        @clkSource :select clk_32k source. Normally, 
                    2'h0:32k RC.               -> RCSOR
                    2'h1:32k XO.               -> XOSOR         
                    2'h2: div from clk_high    -> DIVHIGHSOR
                    , this is for normal function.
*        @ :
*        @ :
*function call example:  rtcInit(1, 1000, 32, RCSOR);
*Return        : None
****************************************************************************************/
void rtcInit(int32 enable, int32 reloadValue,int32 rtcClock,int32 clkSource);
/****************************************************************************************
*Function name : rtcTimerStart
*Description   : start rtc timer
*Paramater	   :
*        @cycle_number :rtcClock*reloadValue;
*        @ :   
*Paramater	selection:		

*Power consumption : 
*Return        :
****************************************************************************************/
void rtcTimerStart(uint32 cycle_number);
#endif



