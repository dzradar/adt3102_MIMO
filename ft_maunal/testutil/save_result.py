import os
import xlsxwriter
from datetime import datetime
current_path = os.path.abspath(".")
now_time = datetime.now().strftime("%Y%m%d-%H%M%S")


class data_record:
    def __init__(self, *args, **kwargs):
        self.excel_work = xlsxwriter.Workbook(current_path + "/adt3102_small_batch_final_test_report_" + now_time + ".xls")
        self.digital_mode_sheet = self.excel_work.add_worksheet("Digital Mode")
        self.ldo_dc_test_sheet = self.excel_work.add_worksheet("LDO DC Test")
        self.aio1_dc_sheet = self.excel_work.add_worksheet("AIO1 DC Test")
        self.block_current_sheet = self.excel_work.add_worksheet("Block Current Test")
        self.pll_mode_sheet = self.excel_work.add_worksheet("PLL Mode")
        self.trx1_sheet = self.excel_work.add_worksheet("TRx Test1")
        self.trx2_sheet = self.excel_work.add_worksheet("TRx Test2")
        self.trx3_sheet = self.excel_work.add_worksheet("TRx Test3")
        self.gpadc_mode_sheet = self.excel_work.add_worksheet("GPADC mode")
        self.bist_mode_sheet = self.excel_work.add_worksheet("BIST mode")

    def digital_mode(self):
        self.digital_mode_sheet.write(0, 0, "uart connect test")
        self.digital_mode_sheet.write(2, 0, "DVDD33")
        self.digital_mode_sheet.write(3, 0, "VDD33")
        self.digital_mode_sheet.write(4, 0, "VDD33_PLLI")
        self.digital_mode_sheet.write(5, 0, "VDD33_PLLN")
        self.digital_mode_sheet.write(6, 0, "VDD12")
        self.digital_mode_sheet.write(7, 0, "AVDD18_PLLN_VCO")
        self.digital_mode_sheet.write(8, 0, "AVDD18_PLLN_PLLN")
        self.digital_mode_sheet.write(9, 0, "AVDD_PLLI_VCO")
        self.digital_mode_sheet.write(10, 0, "AVDD2_PLLI")
        self.digital_mode_sheet.write(11, 0, "AVDD18_BB1")
        self.digital_mode_sheet.write(12, 0, "AVDD18_BB2")
        self.digital_mode_sheet.write(13, 0, "VDD_RF")

    def ldo_dc_test(self):
        self.ldo_dc_test_sheet.write(0, 1, "00")
        self.ldo_dc_test_sheet.write(0, 2, "01")
        self.ldo_dc_test_sheet.write(0, 3, "10")
        self.ldo_dc_test_sheet.write(0, 4, "11")
        self.ldo_dc_test_sheet.write(1, 0, "PLLI_PLL")
        self.ldo_dc_test_sheet.write(2, 0, "PLLI_VCO")
        self.ldo_dc_test_sheet.write(3, 0, "PLLN_PLL")
        self.ldo_dc_test_sheet.write(4, 0, "PLLN_VCO")
        self.ldo_dc_test_sheet.write(6, 0, "LDO_BB0")
        self.ldo_dc_test_sheet.write(7, 0, "LDO_BB1")
        self.ldo_dc_test_sheet.write(8, 0, "LDO_HP")

    def aio1_dc_test(self):
        self.aio1_dc_sheet.write(0, 1, "Voltage/V")
        self.aio1_dc_sheet.write(1, 0, "VBG")
        self.aio1_dc_sheet.write(2, 0, "VBE")
        self.aio1_dc_sheet.write(3, 0, "PA0 DC Bias")
        self.aio1_dc_sheet.write(4, 0, "20GHz Buf DC Bias")
        self.aio1_dc_sheet.write(5, 0, "Doubler DC Bias")
        self.aio1_dc_sheet.write(6, 0, "PGA DC Bias")
        self.aio1_dc_sheet.write(7, 0, "ADC Vref")
        self.aio1_dc_sheet.write(8, 0, "BIST DC Bias")
        self.aio1_dc_sheet.write(9, 1, "Current/uA")
        self.aio1_dc_sheet.write(10, 0, "plli_dac12_reg<3:0>")
        self.aio1_dc_sheet.write(11, 0, "plli_reg2.en_vco_itest")
        self.aio1_dc_sheet.write(12, 0, "plln_dac12_reg<3:0>")
        self.aio1_dc_sheet.write(13, 0, "plln_reg2.en_vco_itest")
        self.aio1_dc_sheet.write(15, 0, "bias2_din19<3:0>")
        self.aio1_dc_sheet.write(16, 0, "bias1_din24<3:0>")

    def block_current(self):
        self.block_current_sheet.write(0, 1, "Current/mA")
        self.block_current_sheet.write(1, 0, "IVDD18_PLLI")
        self.block_current_sheet.write(2, 0, "PLLN_BLOCK")
        self.block_current_sheet.write(3, 0, "PLLN_VCO_BUFF")
        self.block_current_sheet.write(4, 0, "PLLN_VCO_LDO")
        self.block_current_sheet.write(5, 0, "PLLN_PLL_LDO")
        self.block_current_sheet.write(7, 0, "20GHz BUFF")
        self.block_current_sheet.write(8, 0, "Doubler")
        self.block_current_sheet.write(9, 0, "1-4 buffer")
        self.block_current_sheet.write(10, 0, "PA0")
        self.block_current_sheet.write(11, 0, "PA1")
        self.block_current_sheet.write(12, 0, "LNA0")
        self.block_current_sheet.write(13, 0, "LNA1")
        self.block_current_sheet.write(15, 0, "TIA0")
        self.block_current_sheet.write(16, 0, "PGA0")
        self.block_current_sheet.write(17, 0, "ADC0")
        self.block_current_sheet.write(18, 0, "TIA1")
        self.block_current_sheet.write(19, 0, "PGA1")
        self.block_current_sheet.write(20, 0, "ADC1")

    def pll_mode_test(self):
        self.pll_mode_sheet.write(0, 0, "rc 32KHz")
        self.pll_mode_sheet.write(2, 0, "PLLI 1G lock status")
        self.pll_mode_sheet.write(4, 0, "18.75G lock status")
        self.pll_mode_sheet.write(5, 0, "19G lock status")
        self.pll_mode_sheet.write(6, 0, "19.25G lock status")
        self.pll_mode_sheet.write(7, 0, "19.5G lock status")
        self.pll_mode_sheet.write(8, 0, "19.75G lock status")
        self.pll_mode_sheet.write(9, 0, "20G lock status")
        self.pll_mode_sheet.write(10, 0, "20.25 lock status")
        self.pll_mode_sheet.write(11, 0, "PLLN vco_sw")

    def trx1(self):
        self.trx1_sheet.write(1, 0, "LO Freq")
        self.trx1_sheet.write(1, 1, "76 GHz")
        self.trx1_sheet.write(3, 0, "DUT ADC Freq")
        self.trx1_sheet.write(3, 2, "DUT amplitude")
        self.trx1_sheet.write(4, 0, "MASTER ADC Freq")
        self.trx1_sheet.write(4, 2, "MASTER amplitude")
        self.trx1_sheet.write(6, 0, "PA0 powerdetect")
        self.trx1_sheet.write(7, 0, "PA1 powerdetect")

    def trx2(self):
        self.trx2_sheet.write(1, 0, "LO Freq")
        self.trx2_sheet.write(1, 1, "76G GHz")
        self.trx2_sheet.write(3, 0, "Freq")
        self.trx2_sheet.write(3, 1, "200KHz")
        self.trx2_sheet.write(3, 2, "500KHz")
        self.trx2_sheet.write(3, 3, "1MHz")
        self.trx2_sheet.write(3, 4, "2MHz")
        self.trx2_sheet.write(3, 5, "4MHz")
        self.trx2_sheet.write(3, 6, "8MHz")
        self.trx2_sheet.write(4, 0, "PGA0_I")
        self.trx2_sheet.write(5, 0, "PGA0_Q")
        self.trx2_sheet.write(6, 0, "PGA1_I")
        self.trx2_sheet.write(7, 0, "PGA1_Q")
        self.trx2_sheet.write(9, 0, "Gain")
        for index in range(0, 16):
            self.trx2_sheet.write(9, index+1, str(index))
        self.trx2_sheet.write(10, 0, "PGA0_I")
        self.trx2_sheet.write(11, 0, "PGA0_Q")
        self.trx2_sheet.write(12, 0, "PGA1_I")
        self.trx2_sheet.write(13, 0, "PGA1_Q")
        self.trx2_sheet.write(15, 0, "Gain")
        self.trx2_sheet.write(15, 1, "0")
        self.trx2_sheet.write(15, 2, "1")
        self.trx2_sheet.write(15, 3, "2")
        self.trx2_sheet.write(16, 0, "TIA0_I")
        self.trx2_sheet.write(17, 0, "TIA0_Q")
        self.trx2_sheet.write(18, 0, "TIA1_I")
        self.trx2_sheet.write(19, 0, "TIA1_Q")

    def trx3(self):
        self.trx3_sheet.write(0, 0, "LO Freq")
        self.trx3_sheet.write(0, 1, "81 GHz")
        self.trx3_sheet.write(2, 2, "Freq")
        self.trx3_sheet.write(2, 1, "amplitude")
        self.trx3_sheet.write(3, 0, "PGA0_I")
        self.trx3_sheet.write(4, 0, "PGA0_Q")
        self.trx3_sheet.write(5, 0, "PGA1_I")
        self.trx3_sheet.write(6, 0, "PGA1_Q")

    def gpadc_mode(self):
        self.gpadc_mode_sheet.write(0, 0, "input voltage")
        for index in range(1, 12):
            self.gpadc_mode_sheet.write(0, index, str(index/10))
        self.gpadc_mode_sheet.write(1, 0, "ADC")

    def bist_mode(self):
        self.bist_mode_sheet.write(0, 1, "Rx0")
        self.bist_mode_sheet.write(0, 2, "Rx1")
        self.bist_mode_sheet.write(1, 0, "BIST Frequency")
        self.bist_mode_sheet.write(2, 0, "BIST Voltage")

    def excel_init(self):
        self.digital_mode()
        self.ldo_dc_test()
        self.aio1_dc_test()
        self.block_current()
        self.pll_mode_test()
        self.trx1()
        self.trx2()
        self.trx3()
        self.gpadc_mode()
        self.bist_mode()


if __name__ == '__main__':
    test = data_record()
    test.excel_init()
    test.excel_work.close()
